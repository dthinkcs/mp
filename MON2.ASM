DATA SEGMENT
	STR DB 'RAJ$'
	LEN DW 3

DATA ENDS

CODE SEGMENT
	ASSUME CS: CODE, DS: DATA
START:
	MOV AX, DATA
	MOV DS, AX;

	MOV AL, 03; FOR CLEARING SCREEN
	MOV AH, 0; 
	INT 10H
	
	MOV BL, 12; ROW NUMBER 
	MOV BH, 40; COLUMN NUMBER 
	
	MOV AL, 160;  
	MUL BL
	MOV DI, AX
	SHL BH, 1
	MOV BL, BH
	MOV BH, 0
	ADD DI, BX ; 
	
	MOV AX, 0B800H
	MOV ES, AX ; LOAD ADDRESS OF VRAM IN ES
	
	
	; MOVE STR INTO SI
	BK:
	MOV SI, OFFSET STR
	
	MOV CX, LEN 
	BACK:
		MOV BL , BYTE PTR DS:[SI];
		MOV BYTE PTR ES:[DI], BL;
		
		MOV  BYTE PTR ES:[DI + 1], 10011100B; 
		
		INC SI
		INC DI
		INC DI
	LOOP BACK
	
	; KEEP PRESS INFINITE LOOP
	INF:
		MOV DL, 0FFH;
		MOV AH, 06H;
		INT 21H;
		
		; IF D IS PRESSED
		CMP AL, 'D' ; LEFT ARROW KEY
		JNZ SKIP1
		MOV AL, 03
		MOV AH, 0
		INT 10H
		SUB DI, LEN
		SUB DI, LEN
		INC DI
		INC DI
		JMP BK
		
		SKIP1:
		CMP AL, 'A' ; RIGHT ARROW KEY
		JNZ SKIP2
		MOV AL, 03
		MOV AH, 0
		INT 10H
		SUB DI, LEN
		SUB DI, LEN
		DEC DI
		DEC DI
		JMP BK
		
		SKIP2:
		CMP AL, 'W' ; UP ARROW KEY
		JNZ SKIP3
		MOV AL, 03
		MOV AH, 0
		INT 10H
		SUB DI, LEN
		SUB DI, LEN
		SUB DI, 160
		JMP BK
		
		SKIP3:
		CMP AL, 'S' ; UP ARROW KEY
		JNZ INF
		MOV AL, 03
		MOV AH, 0
		INT 10H
		SUB DI, LEN
		SUB DI, LEN
		ADD DI, 160
		JMP BK
		
		
		JMP INF
		
	
	MOV AH, 4CH;
	INT 21H
CODE ENDS
END START



; DISPLAY FIRST 

; IF KEY PRESSED THEN INCREMENT THE VALUE OF

















