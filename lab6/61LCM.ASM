DATA SEGMENT
	A DW 6
	B DW 8
	LCM DW 2 DUP(?)
	
DATA ENDS

LIFO SEGMENT STACK
	DW 100 DUP(?)
LIFO ENDS

CODE SEGMENT
	ASSUME CS: CODE, DS: DATA
START:
	MOV AX, DATA
	MOV DS, AX
	
	MOV AX, A;
	MOV BX, B;
	
	CMP AX, BX; // ASSUME AX IS > BX
	JNC NEXT	;// IF AX < BX YES EXCHANGE => AX - BX < 0 CF = 1
		XCHG AX, BX
	
	NEXT:
	MOV DX, 0; // FOR CARRY
	MOV CX, AX; // FOR UPDATING 
	BACK:
		PUSH AX
		PUSH DX
		
		DIV BX;// IF DIV AX WITH BX AND CHECK IF REMAINDER IS 0 THEN 
		
		CMP DX, 0;// IF DX == 0
		JZ EXIT
		
		POP DX
		POP AX
		
		ADD AX, CX; // AX <- AX + CX 
		ADC DX, 0;
		JMP BACK
	EXIT:
	POP LCM + 2
	POP LCM
		
	MOV AH, 4CH
	INT 21H
CODE ENDS
END START
